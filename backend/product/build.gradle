plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri('http://34.64.229.146:8081/repository/maven-snapshots')
		allowInsecureProtocol = true //http를 사용하기 위해 추가
		credentials{
			username = "weddy"
			password = "weddy"
		}
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.3.2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// 배포했던 라이브러리 명시. group:artifact:version으로 구성 (Nexus)
	implementation 'weddy:common-lib:1.0.2-SNAPSHOT'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


bootJar {
	enabled = true
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
jar {
	enabled = false
}